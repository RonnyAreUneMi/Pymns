# Generated by Django 5.2.6 on 2025-10-10 16:44

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('articulos', '0008_articulo_archivo_bib'),
        ('pymetanalis', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AsignacionCampo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valor', models.TextField(blank=True, help_text='Valor encontrado por el colaborador', null=True)),
                ('completado', models.BooleanField(default=False, help_text='Si el colaborador ya llenó este campo')),
                ('fecha_asignacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_completado', models.DateTimeField(blank=True, null=True)),
                ('notas', models.TextField(blank=True, help_text='Notas del colaborador sobre este campo específico')),
            ],
            options={
                'verbose_name': 'Asignación de Campo',
                'verbose_name_plural': 'Asignaciones de Campos',
                'ordering': ['campo__categoria', 'campo__nombre'],
            },
        ),
        migrations.CreateModel(
            name='CampoMetanalisis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(help_text='Nombre del campo (ej: "Tamaño de muestra")', max_length=200, unique=True)),
                ('codigo', models.CharField(help_text='Código corto para base de datos (ej: "sample_size")', max_length=50, unique=True)),
                ('categoria', models.CharField(choices=[('IDENTIFICACION', 'Identificación del Estudio'), ('METODOLOGIA', 'Metodología'), ('MUESTRA', 'Muestra y Participantes'), ('RESULTADOS', 'Resultados Estadísticos'), ('EFECTOS', 'Tamaños de Efecto'), ('CALIDAD', 'Calidad del Estudio'), ('OTROS', 'Otros')], default='OTROS', max_length=30)),
                ('tipo_dato', models.CharField(choices=[('TEXTO', 'Texto'), ('NUMERO', 'Número'), ('FECHA', 'Fecha'), ('BOOLEANO', 'Sí/No'), ('OPCIONES', 'Opciones múltiples')], default='TEXTO', max_length=20)),
                ('descripcion', models.TextField(blank=True, help_text='Descripción detallada de qué buscar')),
                ('opciones_validas', models.JSONField(blank=True, help_text='Si tipo_dato=OPCIONES, lista de opciones válidas', null=True)),
                ('es_predefinido', models.BooleanField(default=False, help_text='Campo del sistema (no se puede eliminar)')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('activo', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Campo de Metaanálisis',
                'verbose_name_plural': 'Campos de Metaanálisis',
                'ordering': ['categoria', 'nombre'],
            },
        ),
        migrations.CreateModel(
            name='PlantillaBusqueda',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=200)),
                ('descripcion', models.TextField(blank=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('es_predeterminada', models.BooleanField(default=False, help_text='Se aplica automáticamente a nuevos artículos')),
            ],
            options={
                'verbose_name': 'Plantilla de Búsqueda',
                'verbose_name_plural': 'Plantillas de Búsqueda',
            },
        ),
        migrations.AlterModelOptions(
            name='articulo',
            options={'ordering': ['-fecha_carga'], 'verbose_name': 'Artículo', 'verbose_name_plural': 'Artículos'},
        ),
        migrations.AlterModelOptions(
            name='historialarticulo',
            options={'ordering': ['-fecha'], 'verbose_name': 'Historial de Artículo', 'verbose_name_plural': 'Historial de Artículos'},
        ),
        migrations.AddField(
            model_name='articulo',
            name='comentarios_revision',
            field=models.TextField(blank=True, help_text='Comentarios del supervisor cuando manda a corregir', null=True),
        ),
        migrations.AddField(
            model_name='articulo',
            name='datos_extraidos',
            field=models.JSONField(blank=True, default=dict, help_text='Datos que el colaborador ha encontrado y guardado'),
        ),
        migrations.AddField(
            model_name='articulo',
            name='fecha_aprobacion',
            field=models.DateTimeField(blank=True, help_text='Cuándo fue aprobado', null=True),
        ),
        migrations.AddField(
            model_name='articulo',
            name='fecha_asignacion',
            field=models.DateTimeField(blank=True, help_text='Cuándo se asignaron tareas (paso a PENDIENTE)', null=True),
        ),
        migrations.AddField(
            model_name='articulo',
            name='fecha_envio_revision',
            field=models.DateTimeField(blank=True, help_text='Cuándo se envió a revisión', null=True),
        ),
        migrations.AddField(
            model_name='articulo',
            name='fecha_inicio_trabajo',
            field=models.DateTimeField(blank=True, help_text='Cuándo el colaborador empezó a trabajar (EN_PROCESO)', null=True),
        ),
        migrations.AddField(
            model_name='articulo',
            name='fecha_revision',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='articulo',
            name='revisado_por',
            field=models.ForeignKey(blank=True, help_text='Supervisor que revisó el artículo', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='articulos_revisados', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='articulo',
            name='usuario_asignado',
            field=models.ForeignKey(blank=True, help_text='Colaborador asignado para trabajar en este artículo', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='articulos_asignados', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='articulo',
            name='estado',
            field=models.CharField(choices=[('EN_ESPERA', 'En Espera'), ('PENDIENTE', 'Pendiente'), ('EN_PROCESO', 'En Proceso'), ('EN_REVISION', 'En Revisión'), ('APROBADO', 'Aprobado')], default='EN_ESPERA', max_length=20),
        ),
        migrations.AlterField(
            model_name='articulo',
            name='usuario_carga',
            field=models.ForeignKey(help_text='Usuario que subió el artículo', on_delete=django.db.models.deletion.PROTECT, related_name='articulos_subidos', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='historialarticulo',
            name='tipo_cambio',
            field=models.CharField(choices=[('CREACION', 'Creación'), ('EDICION_METADATA', 'Edición de Metadata'), ('CAMBIO_ESTADO', 'Cambio de Estado'), ('ASIGNACION', 'Asignación de Tarea')], max_length=30),
        ),
        migrations.AddIndex(
            model_name='articulo',
            index=models.Index(fields=['proyecto', 'estado'], name='articulos_a_proyect_7661c7_idx'),
        ),
        migrations.AddIndex(
            model_name='articulo',
            index=models.Index(fields=['usuario_asignado', 'estado'], name='articulos_a_usuario_cde3c7_idx'),
        ),
        migrations.AddField(
            model_name='asignacioncampo',
            name='articulo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='campos_asignados', to='articulos.articulo'),
        ),
        migrations.AddField(
            model_name='asignacioncampo',
            name='asignado_por',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='campos_que_asigno', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='campometanalisis',
            name='creado_por',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='campos_creados', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='campometanalisis',
            name='proyecto',
            field=models.ForeignKey(blank=True, help_text='Si es NULL, es global. Si tiene proyecto, es personalizado.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='campos_personalizados', to='pymetanalis.proyecto'),
        ),
        migrations.AddField(
            model_name='asignacioncampo',
            name='campo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='asignaciones', to='articulos.campometanalisis'),
        ),
        migrations.AddField(
            model_name='plantillabusqueda',
            name='campos',
            field=models.ManyToManyField(related_name='plantillas', to='articulos.campometanalisis'),
        ),
        migrations.AddField(
            model_name='plantillabusqueda',
            name='creado_por',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='plantillabusqueda',
            name='proyecto',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='plantillas_busqueda', to='pymetanalis.proyecto'),
        ),
        migrations.AddIndex(
            model_name='campometanalisis',
            index=models.Index(fields=['categoria', 'activo'], name='articulos_c_categor_b0583a_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='asignacioncampo',
            unique_together={('articulo', 'campo')},
        ),
    ]
